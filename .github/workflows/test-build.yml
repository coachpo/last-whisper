name: Test Docker Build

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'last-whisper-backend/**'
      - 'last-whisper-frontend/**'
      - 'last-whisper-backend/Dockerfile'
      - 'last-whisper-frontend/Dockerfile'
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [backend, frontend]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}

    - name: Checkout submodules
      run: |
        git config --global --add safe.directory /home/runner/work/last-whisper/last-whisper
        # Configure git to use the PAT token for authentication
        git config --global url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git submodule sync --recursive
        git submodule update --init --recursive --force
        git submodule foreach --recursive git checkout main
        git submodule foreach --recursive git pull origin main

    - name: Debug directory structure
      run: |
        echo "=== Root directory contents ==="
        ls -la
        echo "=== Backend Dockerfile ==="
        ls -la Dockerfile.backend || echo "Backend Dockerfile not found"
        echo "=== Frontend Dockerfile ==="
        ls -la Dockerfile.frontend || echo "Frontend Dockerfile not found"
        echo "=== Backend directory contents ==="
        ls -la last-whisper-backend/ || echo "Backend directory not found"
        echo "=== Frontend directory contents ==="
        ls -la last-whisper-frontend/ || echo "Frontend directory not found"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test Docker build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.${{ matrix.service }}
        push: false
        tags: test-${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Test image runs
      run: |
        docker run --rm -d --name test-${{ matrix.service }} test-${{ matrix.service }}:latest
        sleep 10
        docker logs test-${{ matrix.service }}
        docker stop test-${{ matrix.service }}
